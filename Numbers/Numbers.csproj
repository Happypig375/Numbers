<Project Sdk='Microsoft.NET.Sdk'>

  <PropertyGroup>
    <TargetFramework>netstandard1.0</TargetFramework>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Version>1.5.1</Version>
    <Owners>Peter Occil</Owners>
    <Description>A C# library that supports arbitrary-precision binary and decimal floating-point numbers and rational numbers with arbitrary-precision components, and supports arithmetic with these numbers.</Description>
    <Copyright>Written by Peter O.  Any copyright is released to the Public Domain.</Copyright>
    <Authors>Peter Occil</Authors>
    <PackageId>PeterO.Numbers</PackageId>
    <Title>Arbitrary-Precision Number Library</Title>
    <PackageRequireLicenseAcceptance>False</PackageRequireLicenseAcceptance>
    <PackageLicenseExpression>CC0-1.0</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/peteroupc/Numbers</PackageProjectUrl>
    <PackageReleaseNotes>
Version 1.5.1

- Fix bugs in EDecimal.FromString and ERational.FromString involving substrings containing negative numbers.

Version 1.5.0

- Major performance improvements in certain number parsing and generating methods, including the FromString methods of EInteger, EDecimal, EFloat, and ERational, and the ToEFloat method of EDecimal, especially where they take an arithmetic context (EContext) that specifies a limited precision and exponent range.
- There were also performance improvements in digit count calculation and in rounding many-digit-long numbers.
- Add int overloads to EDecimal.Pow and EFloat.Pow.
- Add int overloads to several ERational methods.
- Add CompareTo overloads and CompareToValue (which implements current CompareTo) in EDecimal, EFloat, and ERational.  In a future version, CompareTo's behavior might change to CompareToTotal in each of these classes.  Also certain CompareTo* methods now have consistent behavior when they receive a null argument.
- ETrapException now has an Errors property that holds all errors that occur at the same time as the primary error.
- Fixed edge cases when ToShortestString might return an incorrect result.
- Fixed bug when some ETrapExceptions aren't thrown as they should.
- Other bug fixes.
</PackageReleaseNotes>
    <PackageTags>numbers arithmetic decimal math</PackageTags>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>PeterO.snk</AssemblyOriginatorKeyFile>
    <Title>Arbitrary-Precision Arithmetic Library</Title>
  <CodeAnalysisRuleSet>rules.ruleset</CodeAnalysisRuleSet></PropertyGroup>

  <PropertyGroup Condition=' &apos;$(Configuration)|$(Platform)&apos; == &apos;Debug|AnyCPU&apos; '>
    <DocumentationFile>bin\Debug\netstandard1.0\Numbers.xml</DocumentationFile>

    <DebugType>full</DebugType>
  <CodeAnalysisRuleSet>rules.ruleset</CodeAnalysisRuleSet></PropertyGroup>
  <PropertyGroup Condition=' &apos;$(Configuration)|$(Platform)&apos; == &apos;Release|AnyCPU&apos; '>
    <DebugType/>
    <DocumentationFile>bin\Release\netstandard1.0\Numbers.xml</DocumentationFile>

  <CodeAnalysisRuleSet>rules.ruleset</CodeAnalysisRuleSet></PropertyGroup>
  <ItemGroup>

  <AdditionalFiles Include='stylecop.json'/><AdditionalFiles Include='rules.ruleset'/><PackageReference Include='StyleCop.Analyzers' PrivateAssets='All' Version='1.2.0-beta.113'/><PackageReference Include='Microsoft.CodeAnalysis.FxCopAnalyzers' PrivateAssets='All' Version='2.9.8'/></ItemGroup>
<PropertyGroup/><PropertyGroup/>               </Project>
